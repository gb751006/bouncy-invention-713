import React from 'react';
interface Props extends LoaderProps {
    children: JSX.Element | JSX.Element[];
}
declare const Font: (props: Props) => JSX.Element;
interface TextProps extends LoaderProps {
    children: string;
}
export declare const Text: (props: React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement> & TextProps) => JSX.Element;
interface LoaderProps extends FontProps {
    provider?: string;
    onLoad?: (family: string, style: string) => void;
    onError?: (family: string, style: string) => void;
    onAllLoad?: () => void;
    onAllError?: () => void;
    text?: string;
}
export declare const FontLoader: ({ family, weight, italic, provider, onLoad, onError, onAllLoad, onAllError, text }: LoaderProps) => JSX.Element | null;
interface FontProps {
    family: string;
    weight?: number;
    italic?: boolean;
}
export default Font;
